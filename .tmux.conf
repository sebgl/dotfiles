#####################
## Global settings ##
#####################

# set global prefix as ctrl-a
unbind C-b
set-option -g prefix C-a
bind a send-prefix

# reload configuration with prefix-r
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# prettier colors
set -g default-terminal "screen-256color"

# set terminal title
set -g set-titles on
set -g set-titles-string '#h ❐ #S ● #I #W'

# make ctrl+arrow move through words
set-window-option -g xterm-keys on

# no delay for escape key press
set -sg escape-time 0

# Fix scrolling issues
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# bigger history
set -g history-limit 1000000

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# enable mouse mode by default
set -g mouse on
# set mouse on with prefix m
bind m \
    set -g mouse on \;\
    display 'Mouse: ON'
# set mouse off with prefix M
bind M \
    set -g mouse off \;\
    display 'Mouse: OFF'

#################################
## Windows and pane management ##
#################################

# split window bindings
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# open new window right after current one
bind c new-window -ac "#{pane_current_path}"

# switch window using shift+alt+[left|right] without prefix
bind-key -n S-M-Left previous-window
bind-key -n S-M-Right next-window

# switch pane using shift+[left|right] without prefix
bind -n S-Left select-pane -L
bind -n S-Right select-pane -R
bind -n S-Up select-pane -U
bind -n S-Down select-pane -D

# swap panes
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# swap windows
bind P swap-window -t -1
bind N swap-window -t +1

# sync panes
bind-key y set-window-option synchronize-panes on \;\
  set-window-option pane-active-border-style fg=red \;\
  set-window-option pane-border-style fg=yellow \;\
  display-message "Sync panes ON"
bind-key Y set-window-option synchronize-panes off \;\
  set-window-option pane-active-border-style fg=colour51 \;\
  set-window-option pane-border-style fg=colour238 \;\
  display-message "Sync panes OFF"

# zoom current pane to full screen
bind + \
    new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \;\
    swap-pane -s tmux-zoom.0 \;\
    select-window -t tmux-zoom
# restore zoomed pane
bind = \
    last-window \;\
    swap-pane -s tmux-zoom.0 \;\
    kill-window -t tmux-zoom

######################
## OSX custom stuff ##
######################

# reattach to user namespace (without displaying it in panes)
set-option -g default-command "i > /dev/null 2>&1; reattach-to-user-namespace -l zsh"
# no prefix delay when switching panes
set-option -g repeat-time 0

#########################
## Color theme & style ##
#########################

# pane borders (grey and red)
set -g pane-border-fg brightblack
set -g pane-active-border-fg "#BC6363"

# transparent status bar
set-option -g status-bg default
set-option -g status-attr default

# red & grey window names
set-window-option -g window-status-fg "#666666" # grey for inactive windows
set-window-option -g window-status-bg default
set-window-option -g window-status-attr default
set-window-option -g window-status-current-fg "#BC6363" # red for active window
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr default

# space padding on status left
set -g status-left " "
set -g status-justify left

# date & time on status right,
# icon when client prefix is active
set -g status-right '#{?client_prefix,#[fg=#666666]⌨ , #[fg=#666666]%a %e %b %H:%M:%S }'

# refresh every sec (for proper second display)
set -g status-interval 1

# notification messages colors
set-option -g message-fg white
set-option -g message-bg black

# windows names: current dir or running program
set -g window-status-format '#(if [ #{pane_current_command} = "zsh" ]; then basename #{pane_current_path}; else echo "#{pane_current_command}"; fi;)'
set -g window-status-current-format '#(if [ #{pane_current_command} = "zsh" ]; then basename #{pane_current_path}; else echo "#{pane_current_command}"; fi;)'

